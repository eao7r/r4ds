delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]]   <<- 0
delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]]     <<- -0.096
}  # End mLevel1 function
mLevel2 <- function(r, c) {
delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]]     <<- -0.21
delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]]   <<- -0.18
delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]]   <<- 0
delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]]     <<- -0.13
}  # End mLevel2 function
mLevel3 <- function(r, c) {
delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]+1]   <<- delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]]    <<- -0.36
delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]+1]  <<- delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]]   <<- -0.31
delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]+1]    <<- delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]]     <<- 0
delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]]    <<- 0
delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]+1]    <<- delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]]     <<- 0
delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]+1]   <<- delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]]    <<- -0.29
}  # End mLevel3 function
mLevel4 <- function(r, c) {
delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "NO2", c, round_years_index[r]]     <<- 0
delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM10", c, round_years_index[r]]   <<- -0.853
delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "O3", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "PM25", c, round_years_index[r]]   <<- 0
delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "CO", c, round_years_index[r]]       <<- 0
delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]+1] <<- delta_pollutants_sectors["Maritime", "SO2", c, round_years_index[r]]     <<- -0.95
}  # End mLevel4 function
## -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
AQI <- function(no2, pm10, o3, pm25, co, so2) {  # Using CHINA breakpoints
result <- c()
for (i in 1:length(no2)){
no2i <- no2[i]
if(!is.na(no2i)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > no2i)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > no2i)[1], 1]
ii <- which(IAQI_levels[,2] > no2i)[1]
C.high <- bp_CHINA["NO2", "High", ii]
C.low  <- bp_CHINA["NO2", "Low", ii]
si_no2 <- (I.high - I.low)/(C.high-C.low) * (no2i - C.low) + I.low
result <- append(result, si_no2)
} else {   result <- append(result, NA)
}
pm10i <- pm10[i]
if(!is.na(pm10i)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > pm10i)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > pm10i)[1], 1]
ii <- which(IAQI_levels[,2] > pm10i)[1]
C.high <- bp_CHINA["PM10", "High", ii]
C.low  <- bp_CHINA["PM10", "Low", ii]
si_pm10 <- (I.high - I.low)/(C.high-C.low) * (pm10i - C.low) + I.low
result <- append(result, si_pm10)
} else { result <- append(result, NA)
}
o3i <- o3[i]
if(!is.na(o3i)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > o3i)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > o3i)[1], 1]
ii <- which(IAQI_levels[,2] > o3i)[1]
C.high <- bp_CHINA["O3", "High", ii]
C.low  <- bp_CHINA["O3", "Low", ii]
si_o3 <- (I.high - I.low)/(C.high-C.low) * (o3i - C.low) + I.low
result <- append(result, si_o3)
} else { result <- append(result, NA)
}
pm25i <- pm25[i]
if(!is.na(pm25i)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > pm25i)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > pm25i)[1], 1]
ii <- which(IAQI_levels[,2] > pm25i)[1]
C.high <- bp_CHINA["PM25", "High", ii]
C.low  <- bp_CHINA["PM25", "Low", ii]
si_pm25 <- (I.high - I.low)/(C.high-C.low) * (pm25i - C.low) + I.low
result <- append(result, si_pm25)
} else { result <- append(result, NA)
}
coi <- co[i]
if(!is.na(coi)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > coi)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > coi)[1], 1]
ii <- which(IAQI_levels[,2] > coi)[1]
C.high <- bp_CHINA["CO", "High", ii]
C.low  <- bp_CHINA["CO", "Low", ii]
si_co <- (I.high - I.low)/(C.high-C.low) * (coi - C.low) + I.low
result <- append(result, si_co)
} else { result <- append(result, NA)
}
so2i <- so2[i]
if(!is.na(so2i)){
I.high <- IAQI_levels[which(IAQI_levels[,2] > so2i)[1], 2]
I.low  <- IAQI_levels[which(IAQI_levels[,2] > so2i)[1], 1]
ii <- which(IAQI_levels[,2] > so2i)[1]
C.high <- bp_CHINA["SO2", "High", ii]
C.low  <- bp_CHINA["SO2", "Low", ii]
si_so2 <- (I.high - I.low)/(C.high-C.low) * (so2i - C.low) + I.low
result <- append(result, si_so2)
} else { result <- append(result, NA)
}
}   # End for loop
result
}    # End function
## -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
gameOutput <- function(game_id, game_start, first_output, r) {
# Write (append) pollutant and predictor tables as necessary to be read in the next round.
# Where appropriate, only append the .game versions as they are the only ones that have not changed their contents.
#$#X <- as.data.frame(power)
#$#dbWriteTable(con, 'gbag_power', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(pollutants_monthly_game["NO2", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_no2_game',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_no2_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(pollutants_monthly_game["PM10", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_pm10_game', value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_pm10_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(pollutants_monthly_game["O3", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_o3_game',   value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_o3_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(pollutants_monthly_game["PM25", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_pm25_game', value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_pm25_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(pollutants_monthly_game["CO", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_co_game',   value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_co_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(pollutants_monthly_game["SO2", , ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_so2_game',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_so2_game ADD COLUMN idx SERIAL PRIMARY KEY")
X <- as.data.frame(aqi_game_value)
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_aqi_game_value', value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_aqi_game_value ADD COLUMN idx SERIAL PRIMARY KEY" )    # Need to do this again to retain idx key
X <- as.data.frame(aqi_game_src)
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_aqi_game_src', value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_aqi_game_src ADD COLUMN idx SERIAL PRIMARY KEY" )      # Need to do this again to retain idx key
# POP, PV, and FV do not change and do not need to be updated/overwritten.
X <- as.data.frame(t(predictors[, "gdp_game",  ]))                                       # Changes over rounds.  Have to use t( ) due to subscripts
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_gdp_game',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_gdp_game ADD COLUMN idx SERIAL PRIMARY KEY" )
X <- as.data.frame(coal_use_game[, "Buildings", ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_coal_building_game',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_coal_building_game ADD COLUMN idx SERIAL PRIMARY KEY" )
X <- as.data.frame(coal_use_game[, "Industry", ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_coal_industry_game',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_coal_industry_game ADD COLUMN idx SERIAL PRIMARY KEY" )
X <- as.data.frame(coal_use_game[, "Power", ])
X$idx <- 1:nrow(X)
dbWriteTable(con, 'gbag_coal_power',  value = X, overwrite = TRUE, row.names = FALSE)
# dbSendQuery(con, "ALTER TABLE gbag_coal_power ADD COLUMN idx SERIAL PRIMARY KEY" )
# Write changed distribution tables
X <- as.data.frame(pv_dist_game)
dbWriteTable(con, 'gbag_pv_dist_game', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(lt_dist_game)
dbWriteTable(con, 'gbag_lt_dist_game', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(fv_dist_game)
dbWriteTable(con, 'gbag_fv_dist_game', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(buildings_dist)
dbWriteTable(con, 'gbag_buildings_dist', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(industry_dist)
dbWriteTable(con, 'gbag_industry_dist', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(power_dist)
dbWriteTable(con, 'gbag_power_dist', value = X, overwrite = TRUE, row.names = FALSE)
X <- as.data.frame(maritime_dist)
dbWriteTable(con, 'gbag_maritime_dist', value = X, overwrite = TRUE, row.names = FALSE)
# WRITE HEADER FOR THE ROUND
rr <- round_years_index[r] +1
for (city in (1:11)) {
# WRITE CITY DATA
i <- which.max(IAQI_levels[, 2] > aqi_game_value[city, end_months[rr]])[1]  # if which.max returns a vector, take first element
city_out <- data.frame(game_id, r, city_names[city], sum(predictors[rr, "POP", ]), predictors[rr, "POP", city],   # End of two-year round values
predictors[rr, "gdp_game", city], round(aqi_game_value[city, end_months[rr]],2),
pollutant_names[aqi_game_src[city, end_months[rr]]], aqi_levels_CHINA[i],
round(pollutants_monthly_game[ 1, city, end_months[rr]], 2),              ## Cannot easily write a vector variable
round(pollutants_monthly_game[ 2, city, end_months[rr]], 2),              ## and label the column names correctly
round(pollutants_monthly_game[ 3, city, end_months[rr]], 2),
round(pollutants_monthly_game[ 4, city, end_months[rr]], 2),              ## for PostgreSQL
round(pollutants_monthly_game[ 5, city, end_months[rr]], 2),              ## This is ugly, by works
round(pollutants_monthly_game[ 6, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 1, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 2, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 3, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 4, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 5, city, end_months[rr]], 2),
round(pollutants_monthly_base[ 6, city, end_months[rr]], 2))
colnames(city_out) <-  c("game_id", "round", "city_name", "gba_population", "city_population", "city_gdp", "round_end_aqi", "aqi_source", "aqi_level",
"no2_game", "pm10_game", "O3_game", "pm25_game", "co_game", "so2_game",
"no2_base", "pm10_base", "O3_base", "pm25_base", "co_base", "so2_base")
dbWriteTable(con, 'gbag_header', value = city_out, append=TRUE, row.names = FALSE)
# if (first_output) {  dbWriteTable(con, 'gbag_header', value = city_out, overwrite=TRUE, row.names = FALSE)}
#                      # dbSendQuery(con, "ALTER TABLE gbag_header ADD COLUMN idx SERIAL PRIMARY KEY" )  }
#             else  {  dbWriteTable(con, 'gbag_header', value = city_out, append=TRUE, row.names = FALSE)}
##  WRITE CITY's LAND MOBILE OUTPUT
## Costs and benefits of policy choice
lm_1            <- data.frame(game_id, r, city_names[city], player_policies[r, city, "pv_policy"], player_policies[r, city, "fv_policy"],
pv_costs[r, 1, city], pv_costs[r, 2, city], pv_costs[r, 3, city], pv_costs[r, 4, city] )
colnames(lm_1)  <- c("game_id", "round", "city_name", "pv_policy", "fv_policy", "lm_trans_costs", "lm_direct_costs", "lm_direct_bens", "lm_indirect_bens")
if (first_output) { lm_1$idx <- 1:nrow(lm_1)
dbWriteTable(con, 'gbag_lm1', value = lm_1, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_lm1 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_lm1', value = lm_1, append=TRUE, row.names = FALSE)}
lm_pv            <- data.frame(game_id, r, city_names[city],
pv_game[ 2, 1, city, rr], pv_game[ 3, 1, city, rr], pv_game[ 4, 1, city, rr],
pv_game[ 5, 1, city, rr], pv_game[ 6, 1, city, rr], pv_game[ 7, 1, city, rr],
pv_game[ 2, 2, city, rr], pv_game[ 3, 2, city, rr], pv_game[ 4, 2, city, rr],
pv_game[ 5, 2, city, rr], pv_game[ 6, 2, city, rr],
pv_game[ 2, 1, city, rr-2], pv_game[ 3, 1, city, rr-2], pv_game[ 4, 1, city, rr-2],
pv_game[ 5, 1, city, rr-2], pv_game[ 6, 1, city, rr-2], pv_game[ 7, 1, city, rr-2],
pv_game[ 2, 2, city, rr-2], pv_game[ 3, 2, city, rr-2], pv_game[ 4, 2, city, rr-2],
pv_game[ 5, 2, city, rr-2], pv_game[ 6, 2, city, rr-2])
colnames(lm_pv)  <- c("game_id", "round", "city_name", "p_g_end_c2", "p_g_end_c3", "p_g_end_c4", "p_g_end_c5", "p_g_end_c6", "p_end_EV",
"p_d_end_c2", "p_d_end_c3", "p_d_end_c4", "p_d_end_c5", "p_d_end_c6",
"p_g_begin_c2", "p_g_begin_c3", "p_g_begin_c4", "p_g_begin_c5", "p_g_begin_c6", "p_begin_EV",
"p_d_begin_c2", "p_d_begin_c3", "p_d_begin_c4", "p_d_begin_c5", "p_d_begin_c6")
if (first_output) {  lm_pv$idx <- 1:nrow(lm_pv)
dbWriteTable(con, 'gbag_pv_out', value = lm_pv, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_pv_out ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_pv_out', value = lm_pv, append=TRUE, row.names = FALSE)}
lm_lt            <- data.frame(game_id, r, city_names[city],
lt_game[ 2, 1, city, rr], lt_game[ 3, 1, city, rr], lt_game[ 4, 1, city, rr],
lt_game[ 5, 1, city, rr], lt_game[ 6, 1, city, rr],
lt_game[ 2, 2, city, rr], lt_game[ 3, 2, city, rr], lt_game[ 4, 2, city, rr],
lt_game[ 5, 2, city, rr], lt_game[ 6, 2, city, rr],
lt_game[ 2, 1, city, rr-2], lt_game[ 3, 1, city, rr-2], lt_game[ 4, 1, city, rr-2],
lt_game[ 5, 1, city, rr-2], lt_game[ 6, 1, city, rr-2],
lt_game[ 2, 2, city, rr-2], lt_game[ 3, 2, city, rr-2], lt_game[ 4, 2, city, rr-2],
lt_game[ 5, 2, city, rr-2], lt_game[ 6, 2, city, rr-2])
colnames(lm_lt)  <- c("game_id", "round", "city_name", "l_g_end_c2", "l_g_end_c3", "l_g_end_c4", "l_g_end_c5", "l_g_end_c6",
"l_d_end_c2", "l_d_end_c3", "l_d_end_c4", "l_d_end_c5", "l_d_end_c6",
"l_g_begin_c2", "l_g_begin_c3", "l_g_begin_c4", "l_g_begin_c5", "l_g_begin_c6",
"l_d_begin_c2", "l_d_begin_c3", "l_d_begin_c4", "l_d_begin_c5", "l_d_begin_c6")
if (first_output) {  lm_lt$idx <- 1:nrow(lm_lt)
dbWriteTable(con, 'gbag_lt_out', value = lm_lt, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_lt_out ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_lt_out', value = lm_lt, append=TRUE, row.names = FALSE)}
lm_fv            <- data.frame(game_id, r, city_names[city],
fv_game[ 2, 1, city, rr], fv_game[ 3, 1, city, rr], fv_game[ 4, 1, city, rr],
fv_game[ 5, 1, city, rr], fv_game[ 6, 1, city, rr],
fv_game[ 2, 2, city, rr], fv_game[ 3, 2, city, rr], fv_game[ 4, 2, city, rr],
fv_game[ 5, 2, city, rr], fv_game[ 6, 2, city, rr],
fv_game[ 2, 1, city, rr-2], fv_game[ 3, 1, city, rr-2], fv_game[ 4, 1, city, rr-2],
fv_game[ 5, 1, city, rr-2], fv_game[ 6, 1, city, rr-2],
fv_game[ 2, 2, city, rr-2], fv_game[ 3, 2, city, rr-2], fv_game[ 4, 2, city, rr-2],
fv_game[ 5, 2, city, rr-2], fv_game[ 6, 2, city, rr-2])
colnames(lm_fv)  <- c("game_id", "round", "city_name", "fv_g_end_c2", "fv_g_end_c3", "fv_g_end_c4", "fv_g_end_c5", "fv_g_end_c6",
"fv_d_end_c2", "fv_d_end_c3", "fv_d_end_c4", "fv_d_end_c5", "fv_d_end_c6",
"fv_g_begin_c2", "fv_g_begin_c3", "fv_g_begin_c4", "fv_g_begin_c5", "fv_g_begin_c6",
"fv_d_begin_c2", "fv_d_begin_c3", "fv_d_begin_c4", "fv_d_begin_c5", "fv_d_begin_c6")
if (first_output) {  lm_fv$idx <- 1:nrow(lm_fv)
dbWriteTable(con, 'gbag_fv_out', value = lm_fv, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_fv_out ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_fv_out', value = lm_fv, append=TRUE, row.names = FALSE)}
lm_2             <- data.frame(game_id, r, city_names[city],
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","PV",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","PV",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","PV",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","PV",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","PV",city,rr],4),
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","FV",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","FV",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","FV",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","FV",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","FV",city,rr],4))
colnames(lm_2)   <- c("game_id", "round", "city_name", "pv_no2_change", "pv_pm10_change", "pv_pm25_change", "pv_co_change", "pv_so2_change",
"fv_no2_change", "fv_pm10_change", "fv_pm25_change", "fv_co_change", "fv_so2_change")
if (first_output) {  lm_2$idx <- 1:nrow(lm_2)
dbWriteTable(con, 'gbag_lm2', value = lm_2, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_lm2 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_lm2', value = lm_2, append=TRUE, row.names = FALSE)}
##  WRITE CITY's BUILDINGS OUTPUT
bldg_1            <- data.frame(game_id, r, city_names[city], player_policies[r, city, "bldg_policy"],
b_costs[r, 1, city], b_costs[r, 2, city], b_costs[r, 3, city], b_costs[r, 4, city])
colnames(bldg_1)  <- c("game_id", "round", "city_name", "bldg_policy", "bldg_trans_costs", "bldg_direct_costs", "bldg_direct_bens", "bldg_indirect_bens")
if (first_output) {  bldg_1$idx <- 1:nrow(bldg_1)
dbWriteTable(con, 'gbag_bldg1', value = bldg_1, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_bldg1 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_bldg1', value = bldg_1, append=TRUE, row.names = FALSE)}
bldg_2             <- data.frame(game_id, r, city_names[city], buildings[city, 1, rr], buildings[city, 2, rr],
buildings[city, 3, rr], buildings[city, 4, rr],
buildings[city, 1, rr-2], buildings[city, 2, rr-2],
buildings[city, 3, rr-2], buildings[city, 4, rr-2],
round(coal_use_game[city, "Buildings", rr ]), round(coal_use_base[city, "Buildings", rr ]))
colnames(bldg_2)  <- c("game_id", "round", "city_name", "b_mfg_end", "b_off_end", "b_res_end", "b_other_end",
"b_mfg_begin", "b_off_begin", "b_res_begin", "b_other_begin",
"bldg_coal_game", "bldg_coal_base")
if (first_output) {  bldg_2$idx <- 1:nrow(bldg_2)
dbWriteTable(con, 'gbag_bldg2', value = bldg_2, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_bldg2 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_bldg2', value = bldg_2, append=TRUE, row.names = FALSE)}
bldg_3             <- data.frame(game_id, r, city_names[city],
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","Buildings",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","Buildings",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","Buildings",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","Buildings",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","Buildings",city,rr],4))
colnames(bldg_3)   <- c("game_id", "round", "city_name", "bldg_no2_change", "bldg_pm10_change", "bldg_pm25_change", "bldg_co_change", "bldg_so2_change")
if (first_output) {  bldg_3$idx <- 1:nrow(bldg_3)
dbWriteTable(con, 'gbag_bldg3', value = bldg_3, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_bldg3 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_bldg3', value = bldg_3, append=TRUE, row.names = FALSE)}
##  WRITE CITY's INDUSTRY OUTPUT
ind_1            <- data.frame(game_id, r, city_names[city], player_policies[r, city, "industry_policy"],
i_costs[r, 1, city], i_costs[r, 2, city], i_costs[r, 3, city], i_costs[r, 4, city])
colnames(ind_1)  <- c("game_id", "round", "city_name", "ind_policy", "ind_trans_costs", "ind_direct_costs", "ind_direct_bens", "ind_indirect_bens")
if (first_output == TRUE) { ind_1$idx <- 1:nrow(ind_1)
dbWriteTable(con, 'gbag_ind1', value = ind_1, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_ind1 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_ind1', value = ind_1, append=TRUE, row.names = FALSE)}
ind_2             <- data.frame(game_id, r, city_names[city], industry[city, 1, rr], industry[city, 2, rr],
industry[city, 3, rr], industry[city, 4, rr],
industry[city, 1, rr-2], industry[city, 2, rr-2],
industry[city, 3, rr-2], industry[city, 4, rr-2],
round(coal_use_game[city, "Industry", rr]), round(coal_use_base[city, "Industry", rr]))
colnames(ind_2)  <- c("game_id", "round", "city_name", "i_mfg_end", "i_cement_end", "i_steel_end", "i_other_end",
"i_mfg_begin", "i_cement_begin", "i_steel_begin", "i_other_begin",
"ind_coal_game", "ind_coal_base")
if (first_output) {  ind_2$idx <- 1:nrow(ind_2)
dbWriteTable(con, 'gbag_ind2', value = ind_2, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_ind2 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_ind2', value = ind_2, append=TRUE, row.names = FALSE)}
ind_3             <- data.frame(game_id, r, city_names[city],
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","Industry",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","Industry",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","Industry",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","Industry",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","Industry",city,rr],4))
colnames(ind_3)   <- c("game_id", "round", "city_name", "ind_no2_change", "ind_pm10_change", "ind_pm25_change", "ind_co_change", "ind_so2_change")
if (first_output) {  ind_3$idx <- 1:nrow(ind_3)
dbWriteTable(con, 'gbag_ind3', value = ind_3, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_ind3 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_ind3', value = ind_3, append=TRUE, row.names = FALSE)}
##  WRITE CITY's POWER GENERATION OUTPUT
pg_1            <- data.frame(game_id, r, city_names[city], player_policies[r, city, "power_policy"],
player_policies[r, city, "sub_p"], player_policies[r, city, "natgas_p"],
player_policies[r, city, "renew_p"], player_policies[r, city, "nuclear_p"],
pg_costs[r, 1, city], pg_costs[r, 2, city], pg_costs[r, 3, city], pg_costs[r, 4, city])
colnames(pg_1)  <- c("game_id", "round", "city_name", "power_policy", "sub_p", "natgas_p", "renew_p", "nuclear_p", "power_trans_costs",
"power_direct_costs", "power_direct_bens", "power_indirect_bens")
if (first_output) {  pg_1$idx <- 1:nrow(pg_1)
dbWriteTable(con, 'gbag_pg1', value = pg_1, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_pg1 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_pg1', value = pg_1, append=TRUE, row.names = FALSE)}
pg_2             <- data.frame(game_id, r, city_names[city], power[rr, 1, city], power[rr, 2, city], power[rr, 3, city],
power[rr, 4, city], power[rr, 5, city], power[rr-2, 1, city], power[rr-2, 2, city],
power[rr-2, 3, city], power[rr-2, 4, city], power[rr-2, 5, city],
round(coal_use_game[city, "Power",rr]), round(coal_use_game[city, "Power", rr-1]))
colnames(pg_2)  <- c("game_id", "round", "city_name", "sub_end", "super_end", "natgas_end","renew_end", "nuc_end",
"sub_begin", "super_begin", "natgas_begin", "renew_begin", "nuc_begin",
"pg_coal_game", "pg_coal_base")
if (first_output) {  pg_2$idx <- 1:nrow(pg_2)
dbWriteTable(con, 'gbag_pg2', value = pg_2, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_pg2 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_pg2', value = pg_2, append=TRUE, row.names = FALSE) }
pg_3             <- data.frame(game_id, r, city_names[city],
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","Power",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","Power",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","Power",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","Power",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","Power",city,rr],4))
colnames(pg_3)   <- c("game_id", "round", "city_name", "pg_no2_change", "pg_pm10_change", "pg_pm25_change", "pg_co_change", "pg_so2_change")
if (first_output) {  pg_3$idx <- 1:nrow(pg_3)
dbWriteTable(con, 'gbag_pg3', value = pg_3, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_pg3 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_pg3', value = pg_3, append=TRUE, row.names = FALSE)}
##  WRITE CITY's Maritime OUTPUT
mar_1            <- data.frame(game_id, r, city_names[city], player_policies[r, city, "maritime_policy"],
m_costs[r, 1, city], m_costs[r, 2, city], m_costs[r, 3, city], m_costs[r, 4, city])
colnames(mar_1)  <- c("game_id", "round", "city_name", "maritime_policy", "maritime_trans_costs", "maritime_direct_costs", "maritime_direct_bens", "maritime_indirect_bens")
if (first_output) {  mar_1$idx <- 1:nrow(mar_1)
dbWriteTable(con, 'gbag_mar1', value = mar_1, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_mar1 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_mar1', value = mar_1, append=TRUE, row.names = FALSE)}
mar_2             <- data.frame(game_id, r, city_names[city], maritime[rr, 1, city], maritime[rr, 2, city], maritime[rr, 3, city],
maritime[rr-2, 1, city], maritime[rr-2, 2, city], maritime[rr-2, 3, city])
colnames(mar_2)  <- c("game_id", "round", "city_name", "og_end", "coastal_end", "river_end" , "og_begin", "coastal_begin", "river_begin")
if (first_output) {  mar_2$idx <- 1:nrow(mar_2)
dbWriteTable(con, 'gbag_mar2', value = mar_2, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_mar2 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_mar2', value = mar_2, append=TRUE, row.names = FALSE)}
mar_3             <- data.frame(game_id, r, city_names[city],
round((pollutants_monthly_game["NO2",city,end_months[rr]]-pollutants_monthly_game["NO2",city,end_months[rr-2]+1])*pollutant_dist["NO2","Maritime",city,rr],4),
round((pollutants_monthly_game["PM10",city,end_months[rr]]-pollutants_monthly_game["PM10",city,end_months[rr-2]+1])*pollutant_dist["PM10","Maritime",city,rr],4),
round((pollutants_monthly_game["PM25",city,end_months[rr]]-pollutants_monthly_game["PM25",city,end_months[rr-2]+1])*pollutant_dist["PM25","Maritime",city,rr],4),
round((pollutants_monthly_game["CO",city,end_months[rr]]-pollutants_monthly_game["CO",city,end_months[rr-2]+1])*pollutant_dist["CO","Maritime",city,rr],4),
round((pollutants_monthly_game["SO2",city,end_months[rr]]-pollutants_monthly_game["SO2",city,end_months[rr-2]+1])*pollutant_dist["SO2","Maritime",city,rr],4))
colnames(mar_3)   <- c("game_id", "round", "city_name", "mar_no2_change", "mar_pm10_change", "mar_pm25_change", "mar_co_change", "mar_so2_change")
if (first_output) {  mar_3$idx <- 1:nrow(mar_3)
dbWriteTable(con, 'gbag_mar3', value = mar_3, overwrite=TRUE, row.names = FALSE)}
# dbSendQuery(con, "ALTER TABLE gbag_mar3 ADD COLUMN idx SERIAL PRIMARY KEY" )  }
else  {  dbWriteTable(con, 'gbag_mar3', value = mar_3, append=TRUE, row.names = FALSE)}
first_output <- FALSE
} # End of city loop
}  # End of gameOutput function
Play_The_Game(100,T,T,7)
library()
install.packages("tidyverse")
install.packages(c("nycflights13", "gapminder", "Lahman"))
help
help("read.csv")
library(tidyverse)
install.packages('broom')
library(tidyverse)
update.packages(ask = FALSE)
library(tidyverse)
-2/4.8
pnorm(0.233)
pnorm(-0.4166667)
1-pnorm(-0.4166667)
-2/1.6
1-pnorm(-1.25)
1-pnorm(-2/(4.8/sqrt(3)))
1-pnorm(0.4166667)
1-pnorm(2/(4.8/sqrt(3)))
2/(4.8/sqrt(3))
1-pnorm(0.4166667)
qt(0.97,49)
qt(0.97,48)
qt(0.93,81)
qt(0.87,149)
pt()
qt(0.985,99)
qt(0.985,99)*0.07
qt(0.985,99)*0.02
qt(0.985,99)*0.02+3.2
pt(2.14,49)
1-pt(2.14,49)
(1-pt(2.14,49))*2
(1-pt(0.78,315))
Pt(-0.78,33)
Pt(-0.78,33)
pt(-0.78,33)
pt(0.78,33)
pt(1.57,33)
5/sqrt(50)
-2/(5/sqrt(50))
pt(-2/(5/sqrt(50)),49)
pt(-1.6/(5/sqrt(50)),49)
qt(0.05,49)
qt(0.01,49)
qt(0.99,49)
setwd("C:/Users/eaort/Desktop/repos/r4ds")
cars.df <- mtcars
students.df<-read.table("students.txt")
install.packages("tidyverser")
install.packages("tidyverse")
install.packages("faraway")
.libpaths()
libpaths()
libPaths()
.libPaths()
install.packages("faraway")
installed.packages()
install.packages("palmerpenguins")
installed.packages()
getOption("max.print")
library("faraway")
install.packages("statmod")
library("faraway")
corn.df<-cornnit
View(corn.df)
summary(cars)
head(cars)
cars.df<-mtcars
cars.df<-mtcars
head(cars)
students.df<-read.table("students.txt")
students.df<-read.table("students.txt")
head(students.df)
cars.df<-mtcars
head(cars)
students.df<-read.table("students.txt")
head(students.df)
library("faraway")
cars.df<-mtcars
head(cars)
students.df<-read.table("students.txt")
head(students.df)
library("faraway")
practice<-c(13,91,36,95,9,3,61,20,22,97)
class(practice)
practice[5]==5
ractice[10]!=97
practice[10]!=97
(practice[1]+practice[2])<104
(practice[1]+practice[2])<=104
(practice[2]==91) & (practice[9]==22)
(practice[5]<9) | (practice[6]>=4)
Mat.A<-matrix(data=c(4,1,3,6,2,1), nrow=2, ncol=3)
View(Mat.A)
Mat.A<-matrix(data=c(4,1,3,6,2,1), nrow=2, ncol=3, byrow = TRUE)
View(Mat.A)
Mat.A<-matrix(data=c(4,1,3,6,2,1), nrow=2, ncol=3, byrow = TRUE)
Mat.A<-matrix(data=c(4,1,3,6,2,1), nrow=2, ncol=3, byrow = TRUE)
head(Mat.A)
dimnames(Mat.A,c("Huey","Dewey","Luey"))
providedimnames(Mat.A,c("Huey","Dewey","Luey"))
provideDimnames(Mat.A,c("Huey","Dewey","Luey"))
dimnames(Mat.A)<-c("Huey","Dewey","Luey")
dimnames(Mat.A)<-list("Huey","Dewey","Luey")
colnames(Mat.A)<-list("Huey","Dewey","Luey")
head(Mat.A)
Mat.A[2,1]
dim(Mat.A)
factor(practice)
factor(practice)
